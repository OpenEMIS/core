openapi: 3.0.0
info:
  title: OpenEMIS Core
  description: |-
    The [OpenEMIS](https://www.openemis.org/) initiative aims to deploy a high-quality Education Management Information System (EMIS) designed to collect and report data on schools, students, teachers and staff. The system was conceived by `UNESCO` to be a royalty-free system that can be easily customized to meet the specific needs of member countries.
  termsOfService: https://www.openemis.org/terms-of-service/
  contact:
    email: support@openemis.org
  license:
    name: GNU General Public License V3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 4.0.0
servers:
  - url: https://demo.openemis.org/core
tags:
  - name: User Authentication
    description: APIs for User Authentication
  - name: Academic Periods
    description: APIs for Academic Periods
  - name: Education Structure Details
    description: APIs for Education Structure Details
  - name: Institutions
    description: APIs for Institutions
  - name: Institution Grades
    description: APIs for Institution Grades
  - name: Institution Classes
    description: APIs for Institution Classes
  - name: Institution Subjects
    description: APIs for Institution Subjects
  - name: Institution Shifts
    description: APIs for Institution Shifts
  - name: Institution Areas
    description: APIs for Institution Areas
  - name: Institution Summary
    description: APIs for Institution Summary
  - name: Institution Grade Summary
    description: APIs for Institution Grade Summary
  - name: Institution Room Type Summary
    description: APIs for Institution Room Type Summary
  - name: Institution Student Nationality Summary
    description: APIs for Institution Student Nationality Summary
  - name: User Details
    description: APIs for User Details
  - name: Institution Staff
    description: APIs for Institution Staff
  - name: Institution Positions
    description: APIs for Institution Positions
  - name: Locale Content Details
    description: APIs for Locale Content Details
paths:
  /api/v4/login:
    post:
      tags:
        - User Authentication
      summary: Login
      description: Login
      operationId: User Authentication
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: The api_key that is configured 
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'          
            application/xml:
              schema:
                $ref: '#/components/schemas/login'
        '404':
          description: Invalid Email or Password
        '500':
          description: Invalid Username
          
  /api/v4/otp-generate:
    post:
      tags:
        - User Authentication
      summary: Generate OTP
      description: API to Generate OTP
      operationId: Generate OTP
      parameters:
        - name: email
          in: query
          description: The email address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Invalid Email
          
  /api/v4/otp-verify:
    post:
      tags:
        - User Authentication
      summary: Verify OTP
      description: API to Verify OTP
      operationId: Verify OTP
      parameters:
        - name: One Time Password
          in: query
          description: The One Time Password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Invalid OTP
          
  /api/v4/academic-periods/list:
      get:
        tags:
          - Academic Periods
        summary: Get current Academic Period
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value
            
  /api/v4/systems/levels/cycles/programmes/grades/list:
      get:
        tags:
          - Education Structure Details
        summary: Get Current Grades
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value
  
  /api/v4/systems/levels/cycles/programmes/grades/subjects:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value
  
  /api/v4/systems/{system_id}/levels/cycles/programmes/grades/subjects:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: system_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value
  
  /api/v4/systems/{system_id}/levels/{level_id}/cycles/programmes/grades/subjects:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: system_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
          - name: level_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value
  
  /api/v4/systems/{system_id}/levels/{level_id}/cycles/{cycle_id}/programmes/{programme_id}/grades/subjects:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: system_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
          - name: level_id
            in: path
            description: education_level_id
            required: true
            schema:
              type: integer
          - name: cycle_id
            in: path
            description: education_cycle_id
            required: true
            schema:
              type: integer
          - name: programme_id
            in: path
            description: education_programme_id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value
            
  /api/v4/systems/{system_id}/levels/{level_id}/cycles/{cycle_id}/programmes/{programme_id}/grades/{grade_id}/subjects:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: system_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
          - name: level_id
            in: path
            description: education_level_id
            required: true
            schema:
              type: integer
          - name: cycle_id
            in: path
            description: education_cycle_id
            required: true
            schema:
              type: integer
          - name: programme_id
            in: path
            description: education_programme_id
            required: true
            schema:
              type: integer
          - name: grade_id
            in: path
            description: education_grade_id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value

  /api/v4/systems/{system_id}/levels/{level_id}/cycles/{cycle_id}/programmes/{programme_id}/grades/{grade_id}/subjects/{subject_id}:
      get:
        tags:
          - Education Structure Details
        summary: Get All Grade Subjects
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: system_id
            in: path
            description: The level id
            required: true
            schema:
              type: integer
          - name: level_id
            in: path
            description: education_level_id
            required: true
            schema:
              type: integer
          - name: cycle_id
            in: path
            description: education_cycle_id
            required: true
            schema:
              type: integer
          - name: programme_id
            in: path
            description: education_programme_id
            required: true
            schema:
              type: integer
          - name: grade_id
            in: path
            description: education_grade_id
            required: true
            schema:
              type: integer
          - name: subject_id
            in: path
            description: education_subject_id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Education-System'
          '400':
            description: Invalid status value
  
  /api/v4/institutions:
    get:
      tags:
        - Institutions
      summary: Get All Institutions
      description: Multiple Institution Details will be provided with comma separated strings
      parameters:
        - name: academic_period_id
          in: query
          description: This is to filter the results based on the academic_period_id
          required: false
          schema:
            type: integer
        - name: limit
          in: header
          description: This is to limit the number of result
          required: false
          schema:
            type: integer
        - name: order
          in: header
          description: This is to sort the results
          required: false
          schema:
            type: string
        - name: page
          in: header
          description: This is to display the results based on the page number
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institutions'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institutions'
        '400':
          description: Invalid status value
      
  /api/v4/institutions/{institutionId}:
    get:
      tags:
        - Institutions
      summary: Get Institution by Institution ID
      description: Multiple status values can be provided with comma separated strings
      operationId: institutionId
      parameters:
        - name: academic_period_id
          in: query
          description: This is to filter the results based on the academic_period_id
          required: false
          schema:
            type: integer
        - name: limit
          in: header
          description: This is to limit the number of result
          required: false
          schema:
            type: integer
        - name: order
          in: header
          description: This is to sort the results
          required: false
          schema:
            type: string
        - name: page
          in: header
          description: This is to display the results based on the page number
          required: false
          schema:
            type: integer
        - name: institutionId
          in: path
          description: Add Institution id to filter
          required: true
          schema:
            type: integer
            format: int        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Institutions'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institutions'
        '400':
          description: Invalid status value
      
  /api/v4/institutions/list:
    get:
      tags:
        - Institutions
      summary: Get List of Institutions
      description: Multiple Institution Details will be provided with comma separated strings
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
            
  /api/v4/institutions/areas/list:
    get:
      tags:
        - Institutions
      summary: Get Areas from Institutions
      description: Multiple Details will be provided with comma separated strings
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
  
  /api/v4/institutions/grades:
    get:
      tags:
        - Institution Grades
      summary: Get All Institution Grades
      description: Multiple values can be provided with comma separated strings
      operationId: getallinstitutiongrades
      parameters:
        - name: academic_period_id
          in: query
          description: This is to filter the results based on the academic_period_id
          required: false
          schema:
            type: integer
        - name: limit
          in: header
          description: This is to limit the number of result
          required: false
          schema:
            type: integer
        - name: order
          in: header
          description: This is to sort the results
          required: false
          schema:
            type: string
        - name: page
          in: header
          description: This is to display the results based on the page number
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution-Grades'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution-Grades'
        '400':
          description: Invalid status value
      
  /api/v4/institutions/{institutionId}/grades:
    get:
      tags:
        - Institution Grades
      summary: Get All Grades for one Institution
      description: Multiple grades can be provided with comma separated strings
      parameters:
        - name: academic_period_id
          in: query
          description: This is to filter the results based on the academic_period_id
          required: false
          schema:
            type: integer
        - name: limit
          in: header
          description: This is to limit the number of result
          required: false
          schema:
            type: integer
        - name: order
          in: header
          description: This is to sort the results
          required: false
          schema:
            type: string
        - name: page
          in: header
          description: This is to display the results based on the page number
          required: false
          schema:
            type: integer
        - name: institutionId
          in: path
          description: Add Institution id to filter
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution-Grades'         
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution-Grades'
        '400':
          description: Invalid status value        
      
  /api/v4/institutions/{institutionId}/grades/{gradeId}:
      get:
        tags:
          - Institution Grades
        summary: Get All Grades for one Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int  
          - name: gradeId
            in: path
            description: Add grade id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/classes:
      get:
        tags:
          - Institution Classes
        summary: Get all class for all Institution
        description: Multiple classes can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/classes:
      get:
        tags:
          - Institution Classes
        summary: Get All class for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int  
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/classes/{classId}:
      get:
        tags:
          - Institution Classes
        summary: Get one class for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: classId
            in: path
            description: Add class id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Classes'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/subjects:
      get:
        tags:
          - Institution Subjects
        summary: Get All Subjects for All Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/subjects:
      get:
        tags:
          - Institution Subjects
        summary: Get All subjects for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/subjects/{subjectId}:
      get:
        tags:
          - Institution Subjects
        summary: Get All Grades for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: subjectId
            in: path
            description: Add subject id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects'
          '400':
            description: Invalid status value     
            
  /api/v4/institutions/shifts:
      get:
        tags:
          - Institution Shifts
        summary: Get All Shifts for All Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/shifts:
      get:
        tags:
          - Institution Shifts
        summary: Get All Shifts for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/shifts/{shiftId}:
      get:
        tags:
          - Institution Shifts
        summary: Get One Shift for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: shiftId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Shifts'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/areas:
      get:
        tags:
          - Institution Areas
        summary: Get All Areas for All Institution
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/areas:
      get:
        tags:
          - Institution Areas
        summary: Get All Areas for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/areas/{areaId}:
      get:
        tags:
          - Institution Areas
        summary: Get one Area for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: areaId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Areas'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/summaries:
      get:
        tags:
          - Institution Summary
        summary: Get All Grades for one Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/summaries:
      get:
        tags:
          - Institution Summary
        summary: Get All Grades for one Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/grades/summaries:
      get:
        tags:
          - Institution Grade Summary
        summary: Get Grades Summaries for All Institution
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/grades/summaries:
      get:
        tags:
          - Institution Grade Summary
        summary: Get Grades Summary for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/grades/{gradeId}/summaries:
      get:
        tags:
          - Institution Grade Summary
        summary: Get Grade summary for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: gradeId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int    
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grade-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/room-type-summaries:
      get:
        tags:
          - Institution Room Type Summary
        summary: Get Infrastructure summary for all Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room-Type-Summaries'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room-Type-Summaries'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/infrastructure-summaries:
      get:
        tags:
          - Institution Room Type Summary
        summary: Get Infrastructure summary for one Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room-Type-Summaries'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room-Type-Summaries'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/student-nationality-summaries:
      get:
        tags:
          - Institution Student Nationality Summary
        summary: Get All student nationality summaries for all Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/student-nationality-summaries:
      get:
        tags:
          - Institution Student Nationality Summary
        summary: Get All student nationality summaries for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Student-Nationality-Summary'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Student-Nationality-Summary'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/grades/{gradeId}/student-nationality-summaries:
      get:
        tags:
          - Institution Student Nationality Summary
        summary: Get student nationality summary from one Grade for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: academic_period_id
            in: query
            description: This is to filter the results based on the academic_period_id
            required: false
            schema:
              type: integer
          - name: limit
            in: header
            description: This is to limit the number of result
            required: false
            schema:
              type: integer
          - name: order
            in: header
            description: This is to sort the results
            required: false
            schema:
              type: string
          - name: page
            in: header
            description: This is to display the results based on the page number
            required: false
            schema:
              type: integer
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: gradeId
            in: path
            description: Add Grade id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Grades'
          '400':
            description: Invalid status value        
      
  
  /api/v4/users:
      get:
        tags:
          - User Details
        summary: Get All User details
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
          '400':
            description: Invalid status value        
        
  /api/v4/users/{userId}:
      get:
        tags:
          - User Details
        summary: Get User details for one user
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: userId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
          '400':
            description: Invalid status value        
        
  /api/v4/users/openemis_id/{openemis_id}:
      get:
        tags:
          - User Details
        summary: Get All User details
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: openemis_id
            in: path
            description: Add openemis_id to filter
            required: true
            schema:
              type: string
              format: varchar
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
          '400':
            description: Invalid status value        
  
  /api/v4/identity-types/list:
      get:
        tags:
          - User Details
        summary: Get All identity types
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value     
  
  /api/v4/nationalities/list:
      get:
        tags:
          - User Details
        summary: Get All Nationalities
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value     
            
  /api/v4/student-custom-fields:
      get:
        tags:
          - User Details
        summary: Get All Student Custom Fields
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value  
  
  /api/v4/users/identity-types/{identity_type_id}/{identity_number}:
      get:
        tags:
          - User Details
        summary: Get All User details
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: identity_type_id
            in: path
            description: Add openemis_id to filter
            required: true
            schema:
              type: string
              format: varchar
          - name: identity_number
            in: path
            description: Add openemis_id to filter
            required: true
            schema:
              type: string
              format: varchar
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Details'
          '400':
            description: Invalid status value     
            
  /api/v4/institutions/{institutionId}/student-admission:
      post:
        tags:
          - User Details
        summary: Student Admission to an Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid status value  
  
  /api/v4/institutions/staff:
      get:
        tags:
          - Institution Staff
        summary: Get All Staff for All Institution
        description: Multiple grades can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/staff:
      get:
        tags:
          - Institution Staff
        summary: Get All staff for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/staff/{staffId}:
      get:
        tags:
          - Institution Staff
        summary: Get one staff for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: staffId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Staff'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/positions:
      get:
        tags:
          - Institution Positions
        summary: Get All positions for All Institution
        description: Multiple values can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/positions:
      get:
        tags:
          - Institution Positions
        summary: Get All Positions for one Institution
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'
          '400':
            description: Invalid status value        
        
  /api/v4/institutions/{institutionId}/positions/{positionId}:
      get:
        tags:
          - Institution Positions
        summary: Get one position for one Institution
        description: Multiple grades can be provided with comma separated strings
        parameters:
          - name: institutionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: positionId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Positions'
          '400':
            description: Invalid status value        
        
  /api/v4/locale-contents:
      get:
        tags:
          - Locale Content Details
        summary: Get All translations
        description: Multiple grades can be provided with comma separated strings
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Locale-Content-Details'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Locale-Content-Details'
          '400':
            description: Invalid status value        
        
  /api/v4/locale-contents/{localeId}:
      get:
        tags:
          - Locale Content Details
        summary: Get All Translations for one Language
        description: Multiple values can be provided with comma separated strings
        parameters:
          - name: localeId
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Locale-Content-Details'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Locale-Content-Details'
          '400':
            description: Invalid status value 


  /api/v4/institutions/subjects/staff:
      get:
        tags:
          - Institution
        summary: Get Staff's Subjects detail
        description: Get staff's subjects details on the bases of institution
        parameters:
          - name: staff_id
            in: path
            description: Add Staff id to filter
            required: true
            schema:
              type: integer
              format: int
          - name: institution_id
            in: path
            description: Add Institution id to filter
            required: true
            schema:
              type: integer
              format: int
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects-Staff'         
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Institution-Subjects-Staff'
          '400':
            description: Invalid status value 

components:
  schemas:
    Institutions:
      type: object
      required:
        - institutionId
      properties:
        institutionId:
          type: integer
          format: int
          example: 10
        gradeId:
          type: integer
          format: int11
          example: 10
        subjectId:
          type: integer
          format: int11
          example: 198772
        shiftId:
          type: integer
          format: int11
          example: 7
        staffId:
          type: integer
          format: int11
          example: 10
        localeId:
          type: integer
          format: int11
          example: 10
        institution_name:
          type: object
          format: varchar
          example: "Avory Primary School"
        alternative_name:
          type: object
          format: varchar
          example: "Avory Primary"
        institution_code:
          type: object
          format: varchar
          example: 198772
        address:
          type: object
          format: varchar
          example: "270 Duke Lane, City"
        postal_code:
          type: integer
          format: int11
          example: 10231
        contact_person:
          type: object
          format: varchar
          example: "Jane Woo"
        telephone:
          type: integer
          format: int11
          example: 83948723
        fax:
          type: integer
          format: int11
          example: 83948723
        email:
          type: object
          format: varchar
          example: "contact@avoryprimary.com"
        website:
          type: object
          format: int11
          example: "avoryprimary.com"
        date_opened:
          type: integer
          format: int11
          example: "2000-01-01"
        year_opened:
          type: integer
          format: int11
          example: "2000"
        date_closed:
          type: object
          format: varchar
          example: "NULL"
        year_closed:
          type: object
          format: varchar
          example: "NULL"
        longitude:
          type: object
          format: varchar
          example: "76.7631591726293"
        latitude:
          type: object
          format: varchar
          example: "-15.3786647475233"
        logo_name:
          type: object
          format: varchar
          example: "image.png"
        logo_content:
          type: object
          format: varchar
          example: "image.png"
        classification:
          type: object
          format: varchar
          example: 1
        area_id:
          type: integer
          format: int
          example: 1
        area_name:
          type: object
          format: varchar
          example: "Endor"
        area_administrative_id:
          type: integer
          format: int11
          example: 2
        area_administrative_name:
          type: object
          format: varchar
          example: "District 1"
        institution_locality_id:
          type: integer
          format: varchar
          example: 1
        institution_locality_name:
          type: object
          format: varchar
          example: "Urban"
        institution_locality_international_code:
          type: object
          format: varchar
          example: "Urban"
        institution_locality_national_code:
          type: object
          format: varchar
          example: "Urban"
        institution_classification_id:
          type: integer
          format: int11
          example: 2
        institution_classification_name:
          type: object
          format: varchar
          example: "Academic"
        institution_type_id:
          type: integer
          format: int
          example: 7
        institution_type_name:
          type: object
          format: varchar
          example: "Primary"
        institution_type_international_code:
          type: object
          format: varchar
          example: "Primary"
        institution_type_national_code:
          type: integer
          format: int11
          example: "Primary"
        institution_ownership_id:
          type: integer
          format: int11
          example: 1
        institution_ownership_international_code:
          type: object
          format: varchar
          example: "Owned"
        institution_ownership_national_code:
          type: object
          format: varchar
          example: "Owned"
        institution_status_id:
          type: integer
          format: int
          example: 1
        institution_status_name:
          type: object
          format: varchar
          example: "Active"
        institution_status_code:
          type: object
          format: varchar
          example: "ACTIVE"
        institution_sector_id:
          type: integer
          format: int
          example: 1
        institution_sector_name:
          type: object
          format: varchar
          example: "Public"
        institution_sector_international_code:
          type: object
          format: varchar
          example: "Public"
        institution_sector_national_code:
          type: object
          format: varchar
          example: "Public"
        institution_provider_id:
          type: integer
          format: int11
          example: 2
        institution_provider_name:
          type: object
          format: varchar
          example: "MOE"
        institution_provider_international_code:
          type: object
          format: varchar
          example: "MOE"
        institution_provider_national_code:
          type: object
          format: varchar
          example: "MOE"
        institution_gender_id:
          type: integer
          format: int
          example: 1
        institution_gender_name:
          type: object
          format: varchar
          example: "Mixed"
        institution_gender_code:
          type: object
          format: varchar
          example: "Mixed"
        security_group_id:
          type: integer
          format: int
          example: 6
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Institutions'
        complete:
          type: boolean
      xml:
        name: order
    Institution-Grades:
      type: object
      properties:
        institution_id:
          type: integer
          format: int11
          example: 10
        grade_id:
          type: integer
          format: int11
          example: 10
        grade_name:
          type: object
          format: varchar
          example: "Primary 1"
        order:
          type: integer
          format: int11
          example: 10
        admission_age:
          type: integer
          format: int11
          example: 7
        academic_period_id:
          type: integer
          format: int11
          example: 10
        academic_period_name:
          type: object
          format: varchar
          example: "2020"
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Institution-Grades'
        complete:
          type: boolean
      xml:
        name: order
    Institution-Classes:
      type: object
      properties:
        institution_id:
          type: integer
          format: int11
          example: 10
        class_id:
          type: integer
          format: int11
          example: 10
        class_name:
          type: object
          format: varchar
          example: "Primary 1A"
        capacity:
          type: integer
          format: int11
          example: 10
        total_students_female:
          type: integer
          format: int11
          example: 10
        total_students_male:
          type: object
          format: varchar
          example: "2020"
        total_students:
          type: integer
          format: int11
          example: 10
        staff_id:
          type: integer
          format: int11
          example: 10
        institution_shift_id:
          type: object
          format: varchar
          example: "2020"
        academic_period_id:
          type: integer
          format: int11
          example: 10
        academic_period_name:
          type: integer
          format: int11
          example: 10
        grade:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Grades'
        subjects:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Subjects'
        secondary_teachers:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/staff_id'
        students:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/user_id'
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    Institution-Subjects:
      type: object
      properties:
        institution_id:
          type: integer
          format: int11
          example: 10
        subject_id:
          type: integer
          format: int11
          example: 10
        subject_name:
          type: object
          format: varchar
          example: "2020"
        total_female_students:
          type: integer
          format: int11
          example: 10
        total_male_students:
          type: integer
          format: int11
          example: 10
        education_grade_id:
          type: object
          format: varchar
          example: "2020"
        education_grade_name:
          type: integer
          format: int11
          example: 10
        education_subject_id:
          type: integer
          format: int11
          example: 10
        education_subject_name:
          type: object
          format: varchar
          example: "2020"
        academic_period_id:
          type: integer
          format: int11
          example: 10
        academic_period_name:
          type: integer
          format: int11
          example: 10
        classes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/class_id'
        rooms:
          type: integer
          format: int11
          example: 10
        staff:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/staff_id'
        students:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/user_id'
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    Institution-Shifts:
      type: object
      properties:
        institution_id:
          type: integer
          format: int11
          example: 10
        start_time:
          type: integer
          format: int11
          example: 10
        end_time:
          type: object
          format: varchar
          example: "2020"
        academic_period_name:
          type: object
          format: varchar
          example: "2020"
        location_institution_id:
          type: integer
          format: int11
          example: 10
        shift_option_id:
          type: object
          format: varchar
          example: "2020"
        shift_option_name:
          type: object
          format: varchar
          example: "2020"
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    Institution-Areas:
      type: object
      properties:
        institution_id:
          type: integer
          format: int11
          example: 10
        area_administrative:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_administrative'
        area_education:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_education'
        academic_period_name:
          type: object
          format: varchar
          example: "2020"
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    Institution-Summary:
      type: object
      properties:
        institution_id :  
          type: integer
          format: int
          example: 1
        institution_code :  
          type: string
          format: int
          example: 101
        academic_period_id :  
          type: integer
          format: int
          example: 111
        academic_period_name :  
          type: string
          format: int
          example: 2022-2023
        total_grades :  
          type: integer
          format: int
          example: 5
        total_lands :  
          type: integer
          format: int
          example: 1
        total_land_size :  
          type: integer
          format: int
          example: 400
        total_buildings :  
          type: integer
          format: int
          example: 2
        total_building_sizes :  
          type: integer
          format: int
          example: 100
        total_floors :  
          type: integer
          format: int
          example: 4
        total_floor_sizes :  
          type: integer
          format: int
          example: 100
        total_rooms :  
          type: integer
          format: int
          example: 20
        total_room_sizes :  
          type: integer
          format: int
          example: 50
        total_room_classrooms :  
          type: integer
          format: int
          example: 20
        total_room_classroom_sizes :  
          type: integer
          format: int
          example: 300
        total_room_non_classrooms :  
          type: integer
          format: int
          example: 20
        total_room_non_classroom_sizes :  
          type: integer
          format: int
          example: 300
        total_students_female :  
          type: integer
          format: int
          example: 50
        total_students_male :  
          type: integer
          format: int
          example: 50
        total_students :  
          type: integer
          format: int
          example: 100
        total_staff_non_teaching_female :  
          type: integer
          format: int
          example: 2
        total_staff_non_teaching_male :  
          type: integer
          format: int
          example: 2
        total_staff_non_teaching :  
          type: integer
          format: int
          example: 4
        total_staff_teaching_female :  
          type: integer
          format: int
          example: 2
        total_staff_teaching_male :  
          type: integer
          format: int
          example: 2
        total_staff_teaching :  
          type: integer
          format: int
          example: 4
        total_staff_female :  
          type: integer
          format: int
          example: 4
        total_staff_male :  
          type: integer
          format: int
          example: 4
        total_staff :  
          type: integer
          format: int
          example: 8
        total_classes_female :  
          type: integer
          format: int
          example: 2
        total_classes_male :  
          type: integer
          format: int
          example: 1
        total_classes_mixed :  
          type: integer
          format: int
          example: 3
        total_classes :  
          type: integer
          format: int
          example: 6
    Institution-Grade-Summary:
      type: object
      properties:
        institution_id:
          type: integer
          format: int
          example: 1
        institution_code:
          type: integer
          format: int
          example: 101
        academic_period_id:
          type: integer
          format: int
          example: 111
        academic_period_name:
          type: integer
          format: int
          example: 2022-2023
        grade_id:
          type: integer
          format: int
          example: 1122
        grade_name:
          type: integer
          format: int
          example: G10
        total_classes:
          type: integer
          format: int
          example: 6
        total_classes_male:
          type: integer
          format: int
          example: 1
        total_classes_female:
          type: integer
          format: int
          example: 2
        total_classes_mixed:
          type: integer
          format: int
          example: 3
        total_home_room_teachers:
          type: integer
          format: int
          example: 2
        total_secondary_teachers:
          type: integer
          format: int
          example: 4
        total_students:
          type: integer
          format: int
          example: 100
        total_students_female:
          type: integer
          format: int
          example: 50
        total_students_male:
          type: integer
          format: int
          example: 50
    Room-Type-Summaries:
      type: object
      properties:
        institution_id:
          type: integer
          format: int
          example: 1
        institution_code:
          type: integer
          format: int
          example: 101
        academic_period_id:
          type: integer
          format: int
          example: 111
        academic_period_name:
          type: integer
          format: int
          example: 2022-2023
        infrastructure_level:
          type: integer
          format: int
          example: Room
        infrastructure_type:
          type: integer
          format: int
          example: Lab
        total_infrastructure_type:
          type: integer
          format: int
          example: 3
    Institution-Student-Nationality-Summary:
      type: object
      properties:
        institution_id:
          type: integer
          format: int
          example: 1
        institution_code:
          type: string
          format: varchar
          example: 101
        academic_period_id:
          type: integer
          format: int
          example: 111
        academic_period_name:
          type: string
          format: varchar
          example: 2022-2023
        nationality_id:
          type: integer
          format: int
          example: 112
        nationality_name:
          type: string
          format: varchar
          example: Jordanian
        total_students:
          type: integer
          format: int
          example: 33
        total_students_female:
          type: integer
          format: int
          example: 16
        total_students_male:
          type: integer
          format: int
          example: 17
    User-Details:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 2
        username:
          type: string
          format: varchar
          example: "admin"
        openemis_no:
          type: string
          format: varchar
          example: "admin1"
        first_name:
          type: string
          format: varchar
          example: "System"
        middle_name:
          type: string
          format: varchar
          example: "Bin"
        third_name:
          type: string
          format: varchar
          example: "Ali"
        last_name:
          type: string
          format: varchar
          example: "Administrator"
        preferred_name:
          type: string
          format: varchar
          example: "Ahmad"
        email:
          type: string
          format: varchar
          example: "abc@gmail.com"
        Address:
          type: string
          format: varchar
          example: "1 Long Road Brickland"
        postal_code:
          type: string
          format: varchar
          example: "123123"
        address_area_id:
          type: string
          format: varchar
          example: "1"
        birthplace_area_id:
          type: string
          format: varchar
          example: "1"
        gender_id:
          type: string
          format: varchar
          example: "1"
        gender_name:
          type: string
          format: varchar
          example: "Female"
        date_of_birth:
          type: string
          format: varchar
          example: "2022-08-10 12:00:00"
        date_of_death:
          type: string
          format: varchar
          example: "2022-08-10 12:00:00"
        nationalities:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/nationalities'
        identities:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/identities'
        external_reference:
          type: integer
          format: int
          example: 31
        super_admin:
          type: integer
          format: int
          example: 1
        status:
          type: string
          format: varchar
          example: "1"
        last_login:
          type: string
          format: varchar
          example: "2022-08-10 12:00:00"
        photo_name:
          type: object
          format: object
          example: "image.png"
        preferred_language:
          type: string
          format: varchar
          example: "en"
        is_student:
          type: integer
          format: int
          example: 0
        is_staff:
          type: integer
          format: int
          example: 0
        is_guardian:
          type: integer
          format: int
          example: 0
    Institution-Staff:
      type: object
      properties:
        institution_id:
          type: integer
          format: int
          example: 31
        institution_code:
          type: integer
          format: int
          example: 101
        fte:
          type: integer
          format: int
          example: 1
        start_date:
          type: string
          format: datetime
          example: 2022-08-10 12:00:00
        start_year:
          type: integer
          format: int
          example: 2022
        end_date:
          type: string
          format: datetime
          example: 2022-08-10 12:00:00
        end_year:
          type: integer
          format: int
          example: 2022
        staff_id:
          type: integer
          format: int
          example: 533
        staff_type_id:
          type: integer
          format: int
          example: 3
        staff_type_name:
          type: string
          format: varchar
          example: "Permanent"
        staff_status_id:
          type: integer
          format: int
          example: 2
        staff_status_name:
          type: string
          format: varchar
          example: "Assigned"
        institution_position_id:
          type: integer
          format: int
          example: 192
        institution_position_name:
          type: string
          format: varchar
          example: "Principal"
        security_group_user_id:
          type: integer
          format: int
          example: 1
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    Institution-Positions:
      type: object
      properties:
        institution_id:
          type: integer
          format: int
          example: 1
        status_id:
          type: integer
          format: int
          example: 29
        status_name:
          type: string
          format: varchar
          example: "Active"
        position_id:
          type: integer
          format: int
          example: 3
        position_no:
          type: string
          format: varchar
          example: "K0001-1522277303"
        staff_position_title_id:
          type: integer
          format: int
          example: 240
        staff_position_title_name:
          type: string
          format: varchar
          example: "Principal - Non-Teaching"
        staff_position_grade_id:
          type: integer
          format: int
          example: 1
        staff_position_grade_name:
          type: string
          format: varchar
          example: "Pay Scale 1"
        assignee_id:
          type: integer
          format: int
          example: 8805
        is_homeroom:
          type: integer
          format: int
          example: 0
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Institution-Grades'
        complete:
          type: boolean
      xml:
        name: order
    Locale-Content-Details:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 2
        translation:
          type: string
          format: varchar
          example: "North"
        locale_content_id:
          type: integer
          format: integer
          example: "2"
        locale_content_name:
          type: string
          format: varchar
          example: "شمال"
        locale_id:
          type: integer
          format: int
          example: "1"
        locale_name:
          type: string
          format: varchar
          example: "arabic"
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Institution-Grades'
        complete:
          type: boolean
      xml:
        name: order
    Education-System:
      type: object
      properties:
        id:
          type: integer
          format: int11
          example: 1
        level_name:
          type: string
          format: varchar
          example: "National Education System"
        academic_period_id:
          type: integer
          format: int11
          example: 10
        academic_period_name:
          type: string
          format: varchar
          example: "2022-2023"
        order:
          type: integer
          format: int11
          example: 1
        visible:
          type: integer
          format: int11
          example: 1
        modified_user_id:
          type: integer
          format: int11
          example: 1
        modified:
          type: string
          format: varchar
          example: "2023-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int11
          example: 1
        created:
          type: integer
          format: int11
          example: "2023-01-01 12:00:00"
        levels:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Levels'
    Education-Levels:
      type: object
      properties:
        level_id:
          type: integer
          format: int11
          example: 10
        name:
          type: string
          format: varchar
          example: "Primary Education Level"
        order:
          type: integer
          format: int11
          example: 1
        visible:
          type: integer
          format: int11
          example: 1
        modified_user_id:
          type: integer
          format: int11
          example: 1
        modified:
          type: string
          format: varchar
          example: "2023-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int11
          example: 1
        created:
          type: integer
          format: int11
          example: "2023-01-01 12:00:00"
        levels:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Cycles'
    Education-Cycles:
      type: object
      properties:
        id:
          type: integer
          format: int11
          example: 10
        name:
          type: string
          format: varchar
          example: "Primary Education Cycle"
        order:
          type: integer
          format: int11
          example: 1
        visible:
          type: integer
          format: int11
          example: 1
        modified_user_id:
          type: integer
          format: int11
          example: 1
        modified:
          type: string
          format: varchar
          example: "2023-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int11
          example: 1
        created:
          type: integer
          format: int11
          example: "2023-01-01 12:00:00"
        levels:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Programmes'
    Education-Programmes:
      type: object
      properties:
        id:
          type: integer
          format: int11
          example: 10
        name:
          type: string
          format: varchar
          example: "Primary Education Cycle"
        order:
          type: integer
          format: int11
          example: 1
        visible:
          type: integer
          format: int11
          example: 1
        modified_user_id:
          type: integer
          format: int11
          example: 1
        modified:
          type: string
          format: varchar
          example: "2023-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int11
          example: 1
        created:
          type: integer
          format: int11
          example: "2023-01-01 12:00:00"
        levels:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Education-Grades'
    Education-Grades:
      type: object
      properties:
        grade_id:
          type: integer
          format: int11
          example: 10
    Education-Subjects:
      type: object
      properties:
        subject_id:
          type: integer
          format: int11
          example: 10
    staff_id:
      type: object
      properties:
        staff_id:
          type: integer
          format: int11
          example: 10
    user_id:
      type: object
      properties:
        user_id:
          type: integer
          format: int11
          example: 10
    class_id:
      type: object
      properties:
        user_id:
          type: integer
          format: int11
          example: 10
    area_administrative:
      type: object
      properties:
        area_administrative_id:
          type: integer
          format: int11
          example: 10
        area_administrative_code:
          type: integer
          format: int11
          example: 10
        area_administrative_name:
          type: integer
          format: int11
          example: 10
        area_administrative_child:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_administrative_child'
    area_administrative_child:
      type: object
      properties:
        area_administrative_id:
          type: integer
          format: int11
          example: 10
        area_administrative_code:
          type: integer
          format: int11
          example: 10
        area_administrative_name:
          type: integer
          format: int11
          example: 10
        area_administrative_child:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_administrative_child'
    area_education:
      type: object
      properties:
        class_id:
          type: integer
          format: int11
          example: 10
        area_education:
          type: integer
          format: int11
          example: 10
        area_education_code:
          type: integer
          format: int11
          example: 10
        area_education_name:
          type: integer
          format: int11
          example: 10
        area_education_child:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_education_child'
    area_education_child:
      type: object
      properties:
        class_id:
          type: integer
          format: int11
          example: 10
        area_education:
          type: integer
          format: int11
          example: 10
        area_education_code:
          type: integer
          format: int11
          example: 10
        area_education_name:
          type: integer
          format: int11
          example: 10
        area_education_child:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/area_education_child'
    nationalities:
      type: object
      properties:
        preferred:
          type: integer
          format: int11
          example: 1
        nationality_id:
          type: integer
          format: int11
          example: 1
        nationality_name:
          type: string
          format: varchar
          example: "Jordanian"
        security_user_id:
          type: integer
          format: int11
          example: 1
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    identities:
      type: object
      properties:
        identity_type_id: 
          type: integer
          format: int
          example: 1
        identity_type_name: 
          type: string
          format: varchar
          example: National Number
        number: 
          type: integer
          format: int
          example: 222
        issue_date: 
          type: integer
          format: int
          example: 2022-08-10 12:00:00
        expiry_date: 
          type: integer
          format: int
          example: 2022-08-10 12:00:00
        issue_location: 
          type: string
          format: varchar
          example: Jordan
        nationality_id: 
          type: integer
          format: int
          example: 1
        comments: 
          type: string
          format: varchar
          example: No comment
        security_user_id: 
          type: integer
          format: int
          example: 111
        modified_user_id:
          type: integer
          format: int
          example: 1
        modified:
          type: object
          format: timestamp
          example: "2020-01-01 12:00:00"
        created_user_id:
          type: integer
          format: int
          example: 1
        created:
          type: object
          format: timestamp
          example: "2000-01-01 12:00:00"
    login:
      type: object
      properties:
        message:
          type: string
          format: varchar
          example: "Logged In successfully"
        data:
          type: object
          format: varchar
          example: "{token:heyJoeXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9kZW1vLm9wZW5lbWlzLm9yZ1wvY29yZVwvYXBpXC92NFwvbG9naW4iLCJpYXQiOjE2NzQ3MDQ1NjUsImV4cCI6MTY3NDcwODE2NSwibmJmIjoxNjc0NzA0NTY1LCJqdGkiOiJBUElEaGtWak9FUHdzUXc2Iiwic3ViIjoyLCJwcnYiOiJlMjE0OWY2ZjU0YWJlZjFjN2Q2NjMzYTUzYzkyMmM1NzgxODA1ZThjIn0.7Qcz1wiCG9LDxxVOUgGAgkTyOCHqfQ5861QGg6xuPOI}"
    Institution-Subjects-Staff:
      type: object
      properties:
        education_systems_name:
          type: string
          format: varchar
          example: "National Education System 2023"
        education_levels_name:
          type: string
          format: varchar
          example: "Primary Education"
        education_cycles_name:
          type: string
          format: varchar
          example: "Primary - General"
        education_programmes_code:
          type: string
          format: varchar
          example: "Primary"
        education_programmes_name:
          type: string
          format: varchar
          example: "Primary"
        education_grades_code:
          type: string
          format: varchar
          example: "Primary 1"
        education_grades_name:
          type: string
          format: varchar
          example: "Primary 1"
        education_subjects_code:
          type: string
          format: varchar
          example: "SSMC"
        education_subjects_name:
          type: string
          format: varchar
          example: "Social Studies"
        institutions_id:
          type: integer
          format: int
          example: 6
        institutions_code:
          type: string
          format: varchar
          example: "P1002"
        institutions_name:
          type: string
          format: varchar
          example: "Avory Primary School"
        institution_classes_name:
          type: string
          format: varchar
          example: "Primary 1-A"
        academic_periods_name:
          type: string
          format: varchar
          example: "YR2023"
        academic_periods_code:
          type: string
          format: varchar
          example: "2023"
        institution_subjects_id:
          type: integer
          format: int
          example: 4516
        institution_subjects_name:
          type: string
          format: varchar
          example: "Social Studies"
        security_users_openemis_no_subject_teachers:
          type: string
          format: varchar
          example: "1522952429"
        security_users_openemis_no_students:
          type: string
          format: varchar
          example: ""
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Institution-Grades'
        complete:
          type: boolean
      xml:
        name: order