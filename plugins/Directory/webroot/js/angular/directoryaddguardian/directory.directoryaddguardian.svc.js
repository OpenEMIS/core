angular
    .module('directory.directoryaddguardian.svc', ['kd.orm.svc', 'alert.svc'])
    .service('DirectoryaddguardianSvc', DirectoryaddguardianSvc);

DirectoryaddguardianSvc.$inject = ['$http', '$q', '$window', 'KdOrmSvc', 'AlertSvc', 'UtilsSvc'];

function DirectoryaddguardianSvc($http, $q, $window, KdOrmSvc, AlertSvc, UtilsSvc) {
    var service = {
        init: init,
        getUniqueOpenEmisId: getUniqueOpenEmisId,
        generatePassword: generatePassword,
        getGenders: getGenders,
        getNationalities: getNationalities,
        getIdentityTypes: getIdentityTypes,
        getInternalSearchData: getInternalSearchData,
        getExternalSearchData: getExternalSearchData,
        getContactTypes: getContactTypes,
        getRelationType: getRelationType,
        saveGuardianDetails: saveGuardianDetails,
        getAddressAreaId: getAddressAreaId,
        getAddressArea: getAddressArea,
        getBirthplaceAreaId: getBirthplaceAreaId,
        getBirthplaceArea: getBirthplaceArea,
    };
    return service;
    
    function init(baseUrl){
        KdOrmSvc.base(baseUrl);
        KdOrmSvc.controllerAction('Directory');
    }

    function getRelationType() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getRelationshipType';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    };

    function getGenders() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getGenders/';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    }

    function getNationalities() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getNationalities/';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    }

    function getIdentityTypes() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getIdentityTypes/';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    };

    function getUniqueOpenEmisId() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getUniqueOpenemisId/';
        console.log(url);
        $http.get(url)
        .then(function(response){
            console.log("response");
            console.log(response);
            deferred.resolve(response.data.openemis_no);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    }

    function getInternalSearchData(params) {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/directoryInternalSearch';
        $http.post(url, {params: params})
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    };

    function getExternalSearchData(params) {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/directoryExternalSearch';
        $http.post(url, {params: params})
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    };

    function getContactTypes() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getContactType/';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    };

    function generatePassword() {
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Directories/getAutoGeneratedPassword/';
        $http.get(url)
        .then(function(response){
            deferred.resolve(response.data.password);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    }

    function getAddressAreaId () {
        selectedAddressAreaId = $window.localStorage.getItem('address_area_id');
        return JSON.parse(selectedAddressAreaId);
    }

    function getAddressArea () {
        selectedAddressArea = $window.localStorage.getItem('address_area');
        return JSON.parse(selectedAddressArea);
    }

    function getBirthplaceAreaId () {
        selectedBirthplcaeAreaId = $window.localStorage.getItem('birthplace_area_id');
        return JSON.parse(selectedBirthplcaeAreaId);
    }

    function getBirthplaceArea () {
        selectedBirthplcaeArea = $window.localStorage.getItem('birthplace_area');
        return JSON.parse(selectedBirthplcaeArea);
    }

    function saveGuardianDetails(params){
        var deferred = $q.defer();
        var url = angular.baseUrl + '/Institution/Institutions/saveGuardianData/';
        $http.post(url, params)
        .then(function(response){
            deferred.resolve(response);
        }, function(error) {
            deferred.reject(error);
        });
        return deferred.promise;
    }
};