<?php
use Migrations\AbstractMigration;

class POCOR7382 extends AbstractMigration
{
    /**
     * Change Method.
     *
     * More information on this method is available here:
     * http://docs.phinx.org/en/latest/migrations.html#the-change-method
     * @return void
     */
    public function up()
    {
        // Backup table
        $this->execute('CREATE TABLE `zz_7382_report_queries` LIKE `report_queries`');
        $this->execute('INSERT INTO `zz_7382_report_queries` SELECT * FROM `report_queries`');
        
        // DELETE existing queries related to nationalities to ensure the the new inserts are in the right order
        $this->execute('DELETE FROM report_queries WHERE report_queries.name LIKE "%student_assessment_summary%";');
        

        // CREATE temp tables 
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_latest_student_marks_create", "CREATE TABLE IF NOT EXISTS `get_latest_student_marks`( `student_id` int NOT NULL COMMENT 'links to security_users.id', `assessment_period_id` int NOT NULL COMMENT 'links to assessment_periods.id', `education_subject_id` int NOT NULL COMMENT 'links to education_subjects.id', `latest_created` datetime) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_total_student_marks_create", "CREATE TABLE IF NOT EXISTS `get_total_student_marks`( `academic_period_id` int NOT NULL COMMENT 'links to academic_periods.id', `institution_id` int NOT NULL COMMENT 'links to institutions.id', `institution_class_id` int NOT NULL COMMENT 'links to institution_classes.id', `education_grade_id` int NOT NULL COMMENT 'links to education_grades.id', `student_id` int NOT NULL COMMENT 'links to security_users.id', `education_subject_id` int NOT NULL COMMENT 'links to education_subjects.id', `total_mark` decimal(7,2) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_avg_student_marks_create", "CREATE TABLE IF NOT EXISTS `get_avg_student_marks`( `academic_period_id` int NOT NULL COMMENT 'links to academic_periods.id', `institution_id` int NOT NULL COMMENT 'links to institutions.id', `institution_class_id` int NOT NULL COMMENT 'links to institution_classes.id', `education_grade_id` int NOT NULL COMMENT 'links to education_grades.id', `student_id` int NOT NULL COMMENT 'links to security_users.id', `average_mark` decimal(7,2) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_instituion_average_marks_create", "CREATE TABLE IF NOT EXISTS `get_instituion_average_marks`( `academic_period_id` int NOT NULL COMMENT 'links to academic_periods.id', `institution_id` int NOT NULL COMMENT 'links to institutions.id', `instituion_average_mark` decimal(7,2) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_area_average_marks_create", "CREATE TABLE IF NOT EXISTS `get_area_average_marks`( `academic_period_id` int NOT NULL COMMENT 'links to academic_periods.id', `area_id` int NOT NULL COMMENT 'links to areas.id', `area_average_mark` decimal(7,2) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');

        // INSERT data into temp tables 
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_latest_student_marks_insert", "INSERT INTO `get_latest_student_marks`(`student_id`, `assessment_period_id`, `education_subject_id`, `latest_created`) SELECT assessment_item_results.student_id ,assessment_item_results.assessment_period_id ,assessment_item_results.education_subject_id ,MAX(assessment_item_results.created) latest_created FROM assessment_item_results INNER JOIN academic_periods ON academic_periods.id = assessment_item_results.academic_period_id WHERE academic_periods.current = 1 GROUP BY assessment_item_results.student_id ,assessment_item_results.assessment_period_id ,assessment_item_results.education_subject_id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_total_student_marks_insert", "INSERT INTO `get_total_student_marks`(`academic_period_id`, `institution_id`, `institution_class_id`, `education_grade_id`, `student_id`, `education_subject_id`, `total_mark`) SELECT institution_subject_students.academic_period_id ,institution_subject_students.institution_id ,institution_subject_students.institution_class_id ,institution_subject_students.education_grade_id ,institution_subject_students.student_id ,institution_subject_students.education_subject_id ,ROUND(AVG(institution_subject_students.total_mark),2) total_mark FROM institution_subject_students INNER JOIN academic_periods ON academic_periods.id = institution_subject_students.academic_period_id WHERE academic_periods.current = 1 GROUP BY institution_subject_students.academic_period_id ,institution_subject_students.institution_id ,institution_subject_students.institution_class_id ,institution_subject_students.education_grade_id ,institution_subject_students.student_id ,institution_subject_students.education_subject_id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_avg_student_marks_insert", "INSERT INTO `get_avg_student_marks`(`academic_period_id`, `institution_id`, `institution_class_id`, `education_grade_id`, `student_id`, `average_mark`) SELECT institution_subject_students.academic_period_id ,institution_subject_students.institution_id ,institution_subject_students.institution_class_id ,institution_subject_students.education_grade_id ,institution_subject_students.student_id ,ROUND(AVG(institution_subject_students.total_mark),2) average_mark FROM institution_subject_students INNER JOIN academic_periods ON academic_periods.id = institution_subject_students.academic_period_id WHERE academic_periods.current = 1 GROUP BY institution_subject_students.academic_period_id ,institution_subject_students.institution_id ,institution_subject_students.institution_class_id ,institution_subject_students.education_grade_id ,institution_subject_students.student_id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_instituion_average_marks_insert", "INSERT INTO `get_instituion_average_marks`(`academic_period_id`, `institution_id`, `instituion_average_mark`) SELECT institution_subject_students.academic_period_id ,institution_subject_students.institution_id ,ROUND(AVG(institution_subject_students.total_mark),2) instituion_average_mark FROM institution_subject_students INNER JOIN academic_periods ON academic_periods.id = institution_subject_students.academic_period_id WHERE academic_periods.current = 1 GROUP BY institution_subject_students.academic_period_id ,institution_subject_students.institution_id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_area_average_marks_insert", "INSERT INTO `get_area_average_marks`(`academic_period_id`, `area_id`, `area_average_mark`) SELECT institution_subject_students.academic_period_id ,institutions.area_id ,ROUND(AVG(institution_subject_students.total_mark),2) area_average_mark FROM institution_subject_students INNER JOIN academic_periods ON academic_periods.id = institution_subject_students.academic_period_id INNER JOIN institutions ON institutions.id = institution_subject_students.institution_id WHERE academic_periods.current = 1 GROUP BY institution_subject_students.academic_period_id ,institutions.area_id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');


        // CREATE summary table  
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("report_student_assessment_summary_create", "CREATE TABLE IF NOT EXISTS `report_student_assessment_summary`( `academic_period_id` int DEFAULT NULL, `academic_period_code` varchar(200) DEFAULT NULL, `academic_period_name` varchar(200) DEFAULT NULL, `area_id` int DEFAULT NULL, `area_code` varchar(200) DEFAULT NULL, `area_name` varchar(200) DEFAULT NULL, `institution_id` int DEFAULT NULL, `institution_code` varchar(200) DEFAULT NULL, `institution_name` varchar(200) DEFAULT NULL, `grade_id` int DEFAULT NULL, `grade_code` varchar(200) DEFAULT NULL, `grade_name` varchar(200) DEFAULT NULL, `institution_classes_id` int DEFAULT NULL, `institution_classes_name` varchar(200) DEFAULT NULL, `homeroom_teacher_id` int DEFAULT NULL, `homeroom_teacher_name` varchar(250) DEFAULT NULL, `subject_id` int DEFAULT NULL, `subject_code` varchar(200) DEFAULT NULL, `subject_name` varchar(200) DEFAULT NULL, `subject_weight` decimal(6,2) DEFAULT '0.00', `assessment_id` int DEFAULT NULL, `assessment_code` varchar(200) DEFAULT NULL, `assessment_name` varchar(200) DEFAULT NULL, `period_id` int DEFAULT NULL, `period_code` varchar(200) DEFAULT NULL, `period_name` varchar(200) DEFAULT NULL, `academic_term` varchar(200) DEFAULT NULL, `period_weight` decimal(6,2) DEFAULT '0.00', `student_id` int NOT NULL, `student_name` varchar(250) NOT NULL, `latest_mark` float NOT NULL, `total_mark` float DEFAULT NULL, `average_mark` float DEFAULT NULL, `institution_average_mark` float DEFAULT NULL, `area_average_mark` float DEFAULT NULL, `created` datetime NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');

        // TRUNCATE summary table  
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("report_student_assessment_summary_truncate", "TRUNCATE TABLE report_student_assessment_summary;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');

        // INSERT data into summary table  
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("report_student_assessment_summary_insert", "INSERT INTO `report_student_assessment_summary`(`academic_period_id`, `academic_period_code`, `academic_period_name`, `area_id`, `area_code`, `area_name`, `institution_id`, `institution_code`, `institution_name`, `grade_id`, `grade_code`, `grade_name`, `institution_classes_id`, `institution_classes_name`, `homeroom_teacher_id`, `homeroom_teacher_name`, `subject_id`, `subject_code`, `subject_name`, `subject_weight`, `assessment_id`, `assessment_code`, `assessment_name`, `period_id`, `period_code`, `period_name`, `academic_term`, `period_weight`, `student_id`, `student_name`, `latest_mark`, `total_mark`, `average_mark`, `institution_average_mark`, `area_average_mark`, `created`) SELECT academic_periods.id academic_period_id ,academic_periods.code academic_period_code ,academic_periods.name academic_period_name ,areas.id area_id ,areas.code area_code ,areas.name area_name ,institutions.id institution_id ,institutions.code institution_code ,institutions.name institution_name ,education_grades.id education_grade_id ,education_grades.code education_grade_code ,education_grades.name education_grade_name ,institution_classes.id institution_class_id ,institution_classes.name institution_class_name ,homeroom_teacher.id homeroom_teacher_id ,CONCAT(homeroom_teacher.first_name,homeroom_teacher.last_name) homeroom_teacher_name ,education_subjects.id education_subject_id ,education_subjects.code education_subject_code ,education_subjects.name education_subject_name ,assessment_items.weight subject_weight ,assessments.id assessment_id ,assessments.code assessment_code ,assessments.name assessment_name ,assessment_periods.id assessment_period_id ,assessment_periods.code assessment_period_code ,assessment_periods.name assessment_period_name ,assessment_periods.academic_term ,assessment_periods.weight period_weight ,students.id student_id ,CONCAT(students.first_name,students.last_name) student_name ,assessment_item_results.marks latest_mark ,get_total_student_marks.total_mark ,get_avg_student_marks.average_mark ,get_instituion_average_marks.instituion_average_mark ,get_area_average_marks.area_average_mark ,NOW() created FROM assessment_item_results INNER JOIN institutions ON institutions.id = assessment_item_results.institution_id INNER JOIN areas ON areas.id = institutions.area_id INNER JOIN education_grades ON education_grades.id = assessment_item_results.education_grade_id LEFT JOIN institution_classes ON institution_classes.id = assessment_item_results.institution_classes_id AND institution_classes.institution_id = institutions.id INNER JOIN education_subjects ON education_subjects.id = assessment_item_results.education_subject_id INNER JOIN assessments ON assessments.id = assessment_item_results.assessment_id AND assessments.academic_period_id = assessment_item_results.academic_period_id AND assessments.education_grade_id = assessment_item_results.education_grade_id INNER JOIN assessment_items ON assessment_items.assessment_id = assessments.id AND assessment_items.education_subject_id = assessment_item_results.education_subject_id INNER JOIN assessment_periods ON assessment_periods.id = assessment_item_results.assessment_period_id INNER JOIN security_users students ON students.id = assessment_item_results.student_id LEFT JOIN security_users homeroom_teacher ON institution_classes.staff_id = homeroom_teacher.id INNER JOIN get_latest_student_marks ON get_latest_student_marks.student_id = assessment_item_results.student_id AND get_latest_student_marks.assessment_period_id = assessment_item_results.assessment_period_id AND get_latest_student_marks.education_subject_id = assessment_item_results.education_subject_id AND get_latest_student_marks.latest_created = assessment_item_results.created INNER JOIN academic_periods ON academic_periods.id = assessment_item_results.academic_period_id LEFT JOIN get_total_student_marks ON get_total_student_marks.academic_period_id = assessment_item_results.academic_period_id AND get_total_student_marks.institution_id = assessment_item_results.institution_id AND get_total_student_marks.institution_class_id = assessment_item_results.institution_classes_id AND get_total_student_marks.education_grade_id = assessment_item_results.education_grade_id AND get_total_student_marks.student_id = assessment_item_results.student_id AND get_total_student_marks.education_subject_id = assessment_item_results.education_subject_id LEFT JOIN get_avg_student_marks ON get_avg_student_marks.academic_period_id = assessment_item_results.academic_period_id AND get_avg_student_marks.institution_id = assessment_item_results.institution_id AND get_avg_student_marks.institution_class_id = assessment_item_results.institution_classes_id AND get_avg_student_marks.education_grade_id = assessment_item_results.education_grade_id AND get_avg_student_marks.student_id = assessment_item_results.student_id LEFT JOIN get_instituion_average_marks ON get_instituion_average_marks.academic_period_id = assessment_item_results.academic_period_id AND get_instituion_average_marks.institution_id = assessment_item_results.institution_id LEFT JOIN get_area_average_marks ON get_area_average_marks.academic_period_id = assessment_item_results.academic_period_id AND get_area_average_marks.area_id = areas.id WHERE academic_periods.current = 1;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');

        // DROP summary tables
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_latest_student_marks_drop", "DROP TABLE IF EXISTS `get_latest_student_marks`;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_total_student_marks_drop", "DROP TABLE IF EXISTS `get_total_student_marks`;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_avg_student_marks_drop", "DROP TABLE IF EXISTS `get_avg_student_marks`;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_instituion_average_marks_drop", "DROP TABLE IF EXISTS `get_instituion_average_marks`;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("get_area_average_marks_drop", "DROP TABLE IF EXISTS `get_area_average_marks`;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP);');

        
    }
         
    // rollback
    public function down()
    {
        
        // Restore table
        $this->execute('DROP TABLE IF EXISTS `report_queries`');
        $this->execute('RENAME TABLE `zz_7382_report_queries` TO `report_queries`');

        // Drop summary tables
        $this->execute('DROP TABLE IF EXISTS `get_latest_student_marks`;');
        $this->execute('DROP TABLE IF EXISTS `get_total_student_marks`;');
        $this->execute('DROP TABLE IF EXISTS `get_avg_student_marks`;');
        $this->execute('DROP TABLE IF EXISTS `get_instituion_average_marks`;');
        $this->execute('DROP TABLE IF EXISTS `get_area_average_marks`;');
        $this->execute('DROP TABLE IF EXISTS `report_student_assessment_summary`;');


    }
}
?>
