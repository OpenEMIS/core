<?php
use Migrations\AbstractMigration;

class POCOR7222 extends AbstractMigration
{
    /**
     * Change Method.
     *
     * More information on this method is available here:
     * http://docs.phinx.org/en/latest/migrations.html#the-change-method
     * @return void
     */
    public function up()
    {
        // Backup table
        $this->execute('CREATE TABLE `zz_7222_report_queries` LIKE `report_queries`');
        $this->execute('INSERT INTO `zz_7222_report_queries` SELECT * FROM `report_queries`');


        // CREATE summary tables and INSERT new rows into report_queries table        
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("summary_institution_student_subject_results_create", "CREATE TABLE IF NOT EXISTS `summary_institution_student_subject_results`( `academic_period_id` int(11) NOT NULL ,`academic_period_name` varchar(200) NOT NULL ,`area_id` int(11) NOT NULL ,`area_code` varchar(200) NOT NULL ,`area_name` varchar(200) NOT NULL ,`area_administrative_id` int(11) NULL ,`area_administrative_code` varchar(200) NULL ,`area_administrative_name` varchar(200) NULL ,`institution_provider_id` int(11) NOT NULL ,`institution_provider_name` varchar(200) NOT NULL ,`institution_ownership_id` int(11) NOT NULL ,`institution_ownership_name` varchar(200) NOT NULL ,`institution_gender_id` int(11) NOT NULL ,`institution_gender_name` varchar(200) NOT NULL ,`institution_id` int(11) NOT NULL ,`institution_code` varchar(200) NOT NULL ,`institution_name` varchar(200) NOT NULL ,`education_grade_id` int(11) NOT NULL ,`education_grade_code` varchar(200) NOT NULL ,`education_grade_name` varchar(200) NOT NULL ,`student_id` int(11) NOT NULL ,`student_openemis_no` varchar(200) NOT NULL ,`student_first_name` varchar(200) NOT NULL ,`student_middle_name` varchar(200) NULL ,`student_third_name` varchar(200) NULL ,`student_last_name` varchar(200) NOT NULL ,`student_gender_id` int(11) NOT NULL ,`student_gender_name` varchar(200) NOT NULL ,`student_default_identity_id` int(11) NULL ,`student_default_identity_type` varchar(200) NULL ,`student_default_identity_number` varchar(200) NULL ,`student_default_nationality_id` int(11) NULL ,`student_default_nationality_name` varchar(200) NULL ,`education_subject_id` int(11) NOT NULL ,`education_subject_code` varchar(200) NOT NULL ,`education_subject_name` varchar(200) NOT NULL ,`total_avg_results` varchar(200) NULL ,`male_avg_results` varchar(200) NULL ,`female_avg_results` varchar(200) NULL ,`created` datetime NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP)');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("summary_institution_student_subject_results_truncate", "TRUNCATE summary_institution_student_subject_results;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP)');
        $this->execute('INSERT INTO `report_queries` (`name`, `query_sql`, `frequency`, `status`, `modified_user_id`, `modified`, `created_user_id`, `created`) VALUES ("summary_institution_student_subject_results_insert", "INSERT INTO `summary_institution_student_subject_results`(`academic_period_id`, `academic_period_name`, `area_id`, `area_code`, `area_name`, `area_administrative_id`, `area_administrative_code`, `area_administrative_name`, `institution_provider_id`, `institution_provider_name`, `institution_ownership_id`, `institution_ownership_name`, `institution_gender_id`, `institution_gender_name`, `institution_id`, `institution_code`, `institution_name`, `education_grade_id`, `education_grade_code`, `education_grade_name`, `student_id`, `student_openemis_no`, `student_first_name`, `student_middle_name`, `student_third_name`, `student_last_name`, `student_gender_id`, `student_gender_name`, `student_default_identity_id`, `student_default_identity_type`, `student_default_identity_number`, `student_default_nationality_id`, `student_default_nationality_name`, `education_subject_id`, `education_subject_code`, `education_subject_name`, `total_avg_results`, `male_avg_results`, `female_avg_results`, `created`) SELECT academic_periods.id academic_period_id ,academic_periods.name academic_period_name ,areas.id area_id ,areas.code area_code ,areas.name area_name ,area_administratives.id area_administrative_id ,area_administratives.code area_administrative_code ,area_administratives.name area_administrative_name ,institution_providers.id institution_provider_id ,institution_providers.name institution_provider_name ,institution_ownerships.id institution_ownership_id ,institution_ownerships.name institution_ownership_name ,institution_genders.id institution_gender_id ,institution_genders.name institution_gender_name ,institutions.id institution_id ,institutions.code institution_code ,institutions.name institution_name ,education_grades.id education_grade_id ,education_grades.code education_grade_code ,education_grades.name education_grade_name ,security_users.id student_id ,security_users.openemis_no student_openemis_no ,security_users.first_name student_first_name ,security_users.middle_name student_middle_name ,security_users.third_name student_third_name ,security_users.last_name student_last_name ,genders.id student_gender_id ,genders.name student_gender_name ,student_identities.student_default_identity_id ,student_identities.student_default_identity_type ,student_identities.student_default_identity_number ,student_nationalities.student_default_nationality_id ,student_nationalities.student_default_nationality_name ,education_subjects.id education_subject_id ,education_subjects.code education_subject_code ,education_subjects.name education_subject_name ,ROUND(SUM(assessment_item_results.marks * assessment_periods.weight) / IFNULL(assessment_grading_types.max, CEILING(MAX(assessment_item_results.marks) / 10) * 10) * 100, 5) total_avg_results ,CASE WHEN genders.id = 1 THEN ROUND(SUM(assessment_item_results.marks * assessment_periods.weight) / IFNULL(assessment_grading_types.max, CEILING(MAX(assessment_item_results.marks) / 10) * 10) * 100, 5) END male_avg_results ,CASE WHEN genders.id = 2 THEN ROUND(SUM(assessment_item_results.marks * assessment_periods.weight) / IFNULL(assessment_grading_types.max, CEILING(MAX(assessment_item_results.marks) / 10) * 10) * 100, 5) END female_avg_results ,CURRENT_TIMESTAMP() created FROM assessment_item_results INNER JOIN ( SELECT assessment_item_results.student_id ,assessment_item_results.assessment_id ,assessment_item_results.education_subject_id ,assessment_item_results.assessment_period_id ,MAX(assessment_item_results.created) latest_created FROM assessment_item_results GROUP BY assessment_item_results.student_id ,assessment_item_results.assessment_id ,assessment_item_results.education_subject_id ,assessment_item_results.assessment_period_id) latest_grades ON latest_grades.student_id = assessment_item_results.student_id AND latest_grades.assessment_id = assessment_item_results.assessment_id AND latest_grades.education_subject_id = assessment_item_results.education_subject_id AND latest_grades.assessment_period_id = assessment_item_results.assessment_period_id AND latest_grades.latest_created = assessment_item_results.created LEFT JOIN assessment_grading_options ON assessment_grading_options.id = assessment_item_results.assessment_grading_option_id LEFT JOIN assessment_grading_types ON assessment_grading_types.id = assessment_grading_options.assessment_grading_type_id INNER JOIN assessment_periods ON assessment_periods.id = assessment_item_results.assessment_period_id AND assessment_periods.assessment_id = assessment_item_results.assessment_id INNER JOIN academic_periods ON academic_periods.id = assessment_item_results.academic_period_id INNER JOIN institutions ON institutions.id = assessment_item_results.institution_id INNER JOIN institution_genders ON institution_genders.id = institutions.institution_gender_id INNER JOIN institution_ownerships ON institution_ownerships.id = institutions.institution_ownership_id INNER JOIN institution_providers ON institution_providers.id = institutions.institution_provider_id INNER JOIN areas ON areas.id = institutions.area_id LEFT JOIN area_administratives ON area_administratives.id = institutions.area_administrative_id INNER JOIN security_users ON security_users.id = assessment_item_results.student_id INNER JOIN genders ON genders.id = security_users.gender_id LEFT JOIN ( SELECT user_nationalities.id student_default_nationality_id ,user_nationalities.security_user_id ,nationalities.name student_default_nationality_name FROM user_nationalities INNER JOIN nationalities ON nationalities.id = user_nationalities.nationality_id WHERE user_nationalities.preferred = 1 GROUP BY user_nationalities.security_user_id ) AS student_nationalities ON student_nationalities.security_user_id = security_users.id LEFT JOIN ( SELECT user_identities.security_user_id ,GROUP_CONCAT(user_identities.id) student_default_identity_id ,GROUP_CONCAT(identity_types.name) student_default_identity_type ,GROUP_CONCAT(user_identities.number) student_default_identity_number FROM user_identities INNER JOIN identity_types ON identity_types.id = user_identities.identity_type_id WHERE identity_types.default = 1 GROUP BY user_identities.security_user_id ) AS student_identities ON student_identities.security_user_id = security_users.id INNER JOIN education_grades ON education_grades.id = assessment_item_results.education_grade_id INNER JOIN education_subjects ON education_subjects.id = assessment_item_results.education_subject_id GROUP BY education_subjects.id ,security_users.id;", "week", 1, NULL, NULL, 1, CURRENT_TIMESTAMP)');
    
    }
         
    // rollback
    public function down()
    {
        
        // Restore table
        $this->execute('DROP TABLE IF EXISTS `report_queries`');
        $this->execute('RENAME TABLE `zz_7222_report_queries` TO `report_queries`');

        // Drop summary tables
        $this->execute('DROP TABLE IF EXISTS `summary_institution_student_subject_results`');

    }
}
?>